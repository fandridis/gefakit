name: Deploy Preview

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

jobs:
  preview:
    runs-on: ubuntu-latest
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Check for API changes
        id: api_changes
        run: |
          git fetch origin main
          if git diff --quiet origin/main...HEAD -- apps/api/; then
            echo "hasApiChanges=false" >> $GITHUB_OUTPUT
          else
            echo "hasApiChanges=true" >> $GITHUB_OUTPUT
          fi

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Wrangler
        run: npm install -g wrangler@4.10.0

      - name: Generate environment name
        id: generate_env_name
        if: steps.api_changes.outputs.hasApiChanges == 'true'
        run: |
          ENV_NAME=$(echo "${{ github.head_ref }}" | sed 's/[^a-zA-Z0-9-]/-/g')
          echo "ENV_NAME=$ENV_NAME" >> $GITHUB_OUTPUT

      - name: Deploy API preview (raw CLI)
        if: steps.api_changes.outputs.hasApiChanges == 'true'
        env:
          ENV_NAME: ${{ steps.generate_env_name.outputs.ENV_NAME }}
        run: |
          cd apps/api
          wrangler deploy --name="${ENV_NAME}"

      - name: Create Neon Database Branch for Preview
        if: steps.api_changes.outputs.hasApiChanges == 'true'
        uses: neondatabase/create-branch-action@v5
        with:
          project_id: 'super-waterfall-86281505'
          branch_name: ${{ steps.generate_env_name.outputs.ENV_NAME }}
          parent: 'production'
          username: 'neondb_owner'
          api_key: ${{ secrets.NEON_API_KEY }}

      - name: Push preview secrets
        if: steps.api_changes.outputs.hasApiChanges == 'true'
        env:
          ENV_NAME: ${{ steps.generate_env_name.outputs.ENV_NAME }}
        run: |
          echo "${{ steps.create_db_branch.outputs.db_url }}" \
            | wrangler secret put DATABASE_URL --name "$ENV_NAME"
          echo "${{ steps.create_db_branch.outputs.db_url }}" \
            | wrangler secret put TEST_DATABASE_URL --name "$ENV_NAME"
          echo "development" \
            | wrangler secret put NODE_ENV --name "$ENV_NAME"


      - name: Run API tests
        if: steps.api_changes.outputs.hasApiChanges == 'true'
        env:
          DATABASE_URL: ${{ steps.create_db_branch.outputs.db_url }}
          TEST_DATABASE_URL: ${{ steps.create_db_branch.outputs.db_url }}
          NODE_ENV: test
        run: |
          cd apps/api
          npm run test

      - name: Set default API URL
        if: steps.api_changes.outputs.hasApiChanges == 'false'
        run: |
          echo "PREVIEW_API_URL=https://gefakit-api-production.fandridis.workers.dev" >> $GITHUB_ENV

      - name: Build web with preview API URL
        env:
          API_URL: ${{ env.PREVIEW_API_URL }}
        run: |
          cd apps/web
          npm run build:development

      - name: Deploy web preview
        run: |
          cd apps/web
          npm run deploy:development
